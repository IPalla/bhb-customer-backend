openapi: 3.0.0
info:
  title: API BHB Customer Backend
  description: API BHB Customer Backend
  version: 1.0.0
servers:
  - url: bhb-cusomter-backend.bitehouseburger.es/bhb-cusomter-backend
paths:
  /categories:
    get:
      summary: Get categories
      description: Retrieve all active categories
      tags:
        - Categories API
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryResponse'
  /products:
    get:
      summary: Get products by category
      description: Retrieve all products by category
      tags:
        - Products API
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  
  /orders:
    post:
      summary: Create order
      description: Create a new order
      tags:
        - Orders API
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
    get:
      summary: Get orders
      description: Retrieve customer orders using different filters
      tags:
        - Orders API
      security:
        - BearerAuth: []
      parameters:
        - name: type
          in: query
          required: false
          description: Order type filter
          schema:
            type: string
            enum:
              - Delivery
              - Pickup
              - Dinein
        - name: startDate
          in: query
          required: false
          description: Start date filter (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          description: End date filter (YYYY-MM-DD)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
  /otp:
    post:
      tags:
        - OTP API
      summary: Authenticates user using OTP code
      requestBody:
        $ref: '#/components/requestBodies/OtpBody'
      responses:
        '204':
          description: 'No content'
        '401':
          description: 'Unauthorized'
  
  /otp/{phone_number}/validate:
    post:
      tags:
        - OTP API
      parameters:
        - name: otp_code
          in: query
          required: true
          description: OTP Code to be validated
          schema:
            type: string
            example: 123456
        - name: phone_number
          in: path
          required: true
          description: Number associated to OTP code
          schema:
            type: string
            example: 123456
      summary: Authenticates user using OTP code
      responses:
        '200':
          $ref: '#/components/responses/AuthResponse'
        '401':
          description: 'Unauthorized'
  
  /customers:
    put:
      summary: Update customer information
      description: Update the authenticated customer's information
      tags:
        - Customers API
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdate'
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '401':
          description: Unauthorized
        '400':
          description: Bad Request

  /orders/{orderId}:
    get:
      summary: Get order by ID
      description: Retrieve a specific order by its ID
      tags:
        - Orders API
      security:
        - BearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
        '401':
          description: Unauthorized

  /locations:
    get:
      summary: Get locations
      description: Retrieve all locations
      tags:
        - Locations API
      responses:
        '200':
          description: List of locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
    post:
      summary: Create location
      description: Create a new location
      tags:
        - Locations API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLocation'
      responses:
        '201':
          description: Location created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request

components:
  requestBodies:
    OtpBody:
      description: Request Body to generate OTP Code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Otp'
  schemas:
    Order:
      type: object
      description: Order information
      properties:
        id:
          type: string
          description: Order id
        date:
          type: string
          description: Order creation date
        scheduled:
          type: boolean
          description: Indicates if it is a scheduled order
        type:
          type: string
          description: Order type
          enum:
            - Delivery
            - Pickup
            - Dinein
        amount:
          type: number
          description: Order amount in cents without decimals
        notes:
          type: string
          description: Order notes
        customer:
          $ref: '#/components/schemas/Customer'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        status:
          $ref: '#/components/schemas/Status'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/Status'
    OrderResponse: 
      type: object
      description: Order response
      additionalProperties: false
      properties:
        order:
          $ref: '#/components/schemas/Order'
    Customer:
      type: object
      description: Customer information
      additionalProperties: false
      properties:
        id:
          type: string
          description: Customer id
          example: cf02b7ac-57f2-463f-8fe0-b51ade1696c8
        name:
          type: string
          description: Customer name
          example: 'Julio'
        email:
          type: string
          description: Customer email
          example: 'julio@example.com'
        phone_number:
          type: string
          description: Customer phone
          example: +34666666666
        address:
          type: string
          description: Customer address
          example: Avenida de Ejemplo, 7, Portal 2 Bajo E, 28760, Tres Cantos
        addressLatitude:
          type: string
          description: Customer address latitude
          example: 40.5933474
        addressLongitude:
          type: string
          description: Customer address longitude
          example: -3.7001011
    Status:
      type: object
      description: Order status information
      additionalProperties: false
      properties:
        createdAt:
          type: string
          description: Status creation date
          example: '2024-03-23 10:05:25'
        createdAtTs:
          type: number
          description: Status creation date timestamp in epoch
          example: 1716544468
        createdBy:
          type: string
          description: Status created by
          example: 'admin'
        latitude:
          type: string
          description: Status update latitude
          example: '43.1234567'
        longitude:
          type: string
          description: Status update longitude
          example: '43.1234567'
        status:
          type: string
          description: Status enum
          example: PENDING
          enum:
            - PENDING
            - IN_PROGRESS
            - PREPARED
            - READY
            - IN_DELIVERY
            - DELIVERED
    OrdersListResponse:
      type: object
      description: Orders list response
      additionalProperties: false
      properties:
        orders:
          type: array
          maxItems: 1000
          items:
            $ref: '#/components/schemas/Order'
    Product:
      type: object
      description: Product information
      additionalProperties: false
      properties:
        id:
          type: string
          description: Product id
          example: UQ3MUDZ3XIUJPS5Y5KDDKPW2
        catalogId:
          type: string
          description: Catalog Id (From Variation). Used to create the order
          example: UQ3MUDZ3XIUJPS5Y5KDDKPW2
        name:
          type: string
          description: Product name
          example: Bacon Cheese Burger
        description:
          type: string
          description: Product description
          example: Amazing burger with bacon and cheese
        price:
          type: number
          description: Product base price
          example: 0
        category:
          $ref: '#/components/schemas/Category'
        images:
          type: array
          maxItems: 1000
          description: Product image
          items:
            $ref: '#/components/schemas/Image'
        modifiers:
          type: array
          maxItems: 1000
          items: 
            $ref: '#/components/schemas/Modifier'
    Category:
      type: object
      description: Category information
      additionalProperties: false
      properties:
        id:
          type: string
          description: Category id
          example: UQ3MUDZ3XIUJPS5Y5KDDKPW2
        name:
          type: string
          description: Category name
          example: Burgers
        image:
          type: string
          description: Category image
          example: https://image.png
    Modifier:
      type: object
      description: Modifier information
      additionalProperties: false
      properties:
        id:
          type: string
          description: Modifier id
          example: UQ3MUDZ3XIUJPS5Y5KDDKPW2
        name:
          type: string
          description: Modifier name
          example: Tipo de pan
        type: 
          type: string
          description: Modifier type
          example: Single
          enum:
            - LIST
        selection:
          type: string
          description: Modifier selection
          example: SINGLE
          enum:
            - SINGLE
            - MULTIPLE
        options:
          type: array
          maxItems: 1000
          items: 
            $ref: '#/components/schemas/Option'
    Option:
      type: object
      description: Option information
      additionalProperties: false
      properties:
        id:
          type: string
          description: Option id
          example: UQ3MUDZ3XIUJPS5Y5KDDKPW2
        default_option:
          type: boolean
          description: Default option
          example: false
        name:
          type: string
          description: Option name
          example: Integral
        price:
          type: number
          description: Option price in cents without decimals
          example: 0
    Image:
      type: object
      description: Image information
      additionalProperties: false
      properties:
        url:
          type: string
          description: Image url
          example: https://www.bitehouseburger.es/images/bitehouseburger.png
        name:
          type: string
          description: Image name
          example: Bite House Burger
    Otp:
      type: object
      description: Otp information
      additionalProperties: false
      properties:
        phoneNumber:
          type: string
          description: Phone number
          example: +34611222333
    JwtToken:
      type: object
      description: Jwt Token
      additionalProperties: false
      properties:
        token:
          type: string
          description: Auth token
          example: eyJhbGci...
    CategoryResponse:
      type: object
      description: Category information
      properties:
        id:
          type: integer
          description: Category id
          example: 1
        name:
          type: string
          description: Category name
          example: "Burgers"
        description:
          type: string
          description: Category description
          example: "Our delicious selection of burgers"
        isActive:
          type: boolean
          description: Whether the category is active
          example: true
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2024-03-25T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-03-25T10:00:00Z"
    CustomerUpdate:
      type: object
      description: Customer update information
      additionalProperties: false
      properties:
        firstName:
          type: string
          description: Customer first name
          example: 'John'
        lastName:
          type: string
          description: Customer last name
          example: 'Doe'
        email:
          type: string
          description: Customer email
          example: 'john.doe@example.com'
        phoneNumber:
          type: string
          description: Customer phone
          example: '+34666666666'
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      description: Address information
      additionalProperties: false
      properties:
        street:
          type: string
          description: Street address
          example: 'Avenida de Ejemplo, 7'
    Location:
      type: object
      description: Location information
      properties:
        id:
          type: string
          description: Location ID
        name:
          type: string
          description: Location name
        address:
          type: string
          description: Location address
        opening_hours:
          type: string
          description: Location opening hours
        is_closed:
          type: boolean
          description: Whether the location is currently closed
        square_location_id:
          type: string
          description: Square Location ID
        square_terminal_id:
          type: string
          description: Square Terminal ID
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
    CreateLocation:
      type: object
      description: Create location request
      required:
        - name
        - address
        - opening_hours
        - is_closed
        - square_location_id
        - square_terminal_id
      properties:
        name:
          type: string
          description: Location name
        address:
          type: string
          description: Location address
        opening_hours:
          type: string
          description: Location opening hours
        is_closed:
          type: boolean
          description: Whether the location is currently closed
        square_location_id:
          type: string
          description: Square Location ID
        square_terminal_id:
          type: string
          description: Square Terminal ID
  responses:
    AuthResponse:
      description: JWT of the authenticated rider
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JwtToken'
    OrderResponse:
      description: Retrieved order
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    OrdersListResponse:
      description: List of retrieved orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrdersListResponse'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT